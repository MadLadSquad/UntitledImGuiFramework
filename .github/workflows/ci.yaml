name: CI
env:
  BUILD_CONFIGURATION: Release
on: [ push, pull_request ]
jobs:
  macOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
          submodules: true
      - name: Checkout submodules
        shell: bash
        run: |
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Get dependencies
        run: |
          brew install glew glfw pkg-config yaml-cpp vulkan-headers vulkan-loader vulkan-tools vulkan-utility-libraries vulkan-validationlayers vulkan-extensionlayer
      - name: Install framework
        shell: bash
        run: ./install.sh ci
      - name: Install project
        shell: bash
        run: ./create-project.sh t ci
  Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
          submodules: true
      - name: Checkout submodules
        shell: bash
        run: |
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Get dependencies
        run: | 
          sudo apt update && sudo apt-get install x11-xserver-utils libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev gcc make g++ libxmu-dev libxi-dev libgl-dev libglu1-mesa-dev libvulkan1 mesa-vulkan-drivers vulkan-tools libvulkan-dev libasound2-dev libflac-dev libogg-dev libtool libvorbis-dev libopus-dev libsndfile1-dev libglew-dev libssl-dev zlib1g zlib1g-dev libglfw3 libglfw3-dev libyaml-cpp-dev libxkbcommon-dev
      - name: Install framework
        shell: bash
        run: ./install.sh ci
      - name: Install project
        shell: bash
        run: ./create-project.sh t ci
  Windows:
    runs-on: windows-latest
    steps:
        - uses: actions/checkout@v4
          with:
            lfs: true
            submodules: true
        - name: Set MSBuild env
          uses: microsoft/setup-msbuild@main
        - name: Checkout submodules
          shell: bash
          run: |
            git submodule sync --recursive
            git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
        - name: Install framework
          run: bash install.sh ci
        - name: Install project
          run: bash create-project.sh t ci
