name: Update Dependencies
on:
  push:
    branches: [ master ]
  schedule:
    - cron: "0 2 * * *"
    - cron: "0 8 * * *"
    - cron: "0 14 * * *"
    - cron: "0 20 * * *"
jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
      - name: checking out code
        uses: actions/checkout@v5
        with:
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}
          lfs: false
          submodules: true
          clean: false
          fetch-depth: 0
          #persist-credentials: false
      - name: "Import bot's GPG key for signing commits"
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.ACTION_COMMIT_SING_PRIVATE_KEY }}
          passphrase: ${{ secrets.ACTION_COMMIT_SING_PASS }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Extract commit data
        uses: rlespinasse/git-commit-data-action@v1.x
      - name: Update submodules
        id: mod
        run: |
          git config --global user.name "Madman10K"
          git config --global user.email "contact@madladsquad.com"
          git fetch --all
          git checkout auto || git checkout -b auto
          git submodule foreach --recursive "git reset --hard origin/\`git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/\`"
          git submodule update --remote --merge --init

          cd Framework/ThirdParty/source-libraries/cimgui || exit
          git clone https://github.com/dearimgui/dear_bindings.git --recursive || exit
          cd dear_bindings || exit
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python3 dear_bindings.py --imconfig-path ../../../imgui/core/imconfig.h -o cimgui ../../../imgui/core/imgui.h
          mv cimgui.cpp cimgui.h ../
          cd .. || exit
          deactivate
          rm -rf dear_bindings
          
          cd ../../glad || exit
          rm -rf include src || exit
          git clone https://github.com/Dav1dde/glad.git --recursive
          cd glad
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python3 -m glad --api gl:core,gles1,gles2,glsc2 --out-path ../
          cd ..
          sed -i "s/generated by glad .*//g" include/glad/gl.h include/glad/gles1.h include/glad/gles2.h include/glad/glsc2.h 
          rm -rf glad
          cd ../../../ || exit
          
          (git add . && git commit -m "auto" && git push origin HEAD:auto && echo "out=s" >> $GITHUB_OUTPUT) || echo "out=?" >> $GITHUB_OUTPUT
      - name: Create PR
        if: "steps.mod.outputs.out != '?'"
        uses: JasonEtco/create-an-issue@v2 
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_ISSUE_SECRET }}
        with:
          filename: .github/auto-issue-template.md
          update_existing: true
          search_existing: open
